{
    "git://github.com/pre-commit/pre-commit-hooks": [
        {
            "id": "autopep8-wrapper",
            "name": "autopep8 wrapper",
            "description": "Runs autopep8 over python source. (You'll want args: [-i] when using this hook, see .pre-commit-config.yaml for an example.)",
            "entry": "autopep8-wrapper",
            "language": "python",
            "files": "\\.py$",
            "args": [
                "-i"
            ]
        },
        {
            "id": "check-added-large-files",
            "name": "Check for added large files",
            "description": "Prevent giant files from being committed",
            "entry": "check-added-large-files",
            "language": "python",
            "files": ""
        },
        {
            "id": "check-case-conflict",
            "name": "Check for case conflicts",
            "description": "Check for files that would conflict in case-insensitive filesystems",
            "entry": "check-case-conflict",
            "language": "python",
            "files": ""
        },
        {
            "id": "check-docstring-first",
            "name": "Check docstring is first",
            "description": "Checks a common error of defining a docstring after code.",
            "entry": "check-docstring-first",
            "language": "python",
            "files": "\\.py$"
        },
        {
            "id": "check-json",
            "name": "Check JSON",
            "description": "This hook checks json files for parseable syntax.",
            "entry": "check-json",
            "language": "python",
            "files": "\\.json$"
        },
        {
            "id": "check-merge-conflict",
            "name": "Check for merge conflicts",
            "description": "Check for files that contain merge conflict strings.",
            "entry": "check-merge-conflict",
            "language": "python",
            "files": ""
        },
        {
            "id": "check-xml",
            "name": "Check Xml",
            "description": "This hook checks xml files for parseable syntax.",
            "entry": "check-xml",
            "language": "python",
            "files": "\\.xml$"
        },
        {
            "id": "check-yaml",
            "name": "Check Yaml",
            "description": "This hook checks yaml files for parseable syntax.",
            "entry": "check-yaml",
            "language": "python",
            "files": "\\.(yaml|yml)$"
        },
        {
            "id": "debug-statements",
            "name": "Debug Statements (Python)",
            "description": "This hook checks that debug statements (pdb, ipdb, pudb) are not imported on commit.",
            "entry": "debug-statement-hook",
            "language": "python",
            "files": "\\.py$"
        },
        {
            "id": "detect-private-key",
            "name": "Detect Private Key",
            "description": "Detects the presence of private keys",
            "entry": "detect-private-key",
            "language": "python",
            "files": ""
        },
        {
            "id": "double-quote-string-fixer",
            "name": "Fix double quoted strings",
            "description": "This hook replaces double quoted strings with single quoted strings",
            "entry": "double-quote-string-fixer",
            "language": "python",
            "files": "\\.py$"
        },
        {
            "id": "end-of-file-fixer",
            "name": "Fix End of Files",
            "description": "Ensures that a file is either empty, or ends with one newline.",
            "entry": "end-of-file-fixer",
            "language": "python",
            "files": "\\.(html|erb|slim|haml|ejs|jade|js|coffee|json|rb|md|py|css|scss|less|sh|tmpl|txt|yaml|yml)$"
        },
        {
            "id": "flake8",
            "name": "Flake8",
            "description": "This hook runs flake8.",
            "entry": "flake8",
            "language": "python",
            "files": "\\.py$"
        },
        {
            "id": "name-tests-test",
            "name": "Tests should end in _test.py",
            "description": "This verifies that test files are named correctly",
            "entry": "name-tests-test",
            "language": "python",
            "files": "tests/.+\\.py$"
        },
        {
            "id": "pyflakes",
            "name": "Pyflakes (DEPRECATED, use flake8)",
            "description": "This hook runs pyflakes. (This is deprecated, use flake8).",
            "entry": "pyflakes",
            "language": "python",
            "files": "\\.py$"
        },
        {
            "id": "requirements-txt-fixer",
            "name": "Fix requirements.txt",
            "description": "Sorts entries in requirements.txt",
            "entry": "requirements-txt-fixer",
            "language": "python",
            "files": "requirements.*\\.txt$"
        },
        {
            "id": "trailing-whitespace",
            "name": "Trim Trailing Whitespace",
            "description": "This hook trims trailing whitespace.",
            "entry": "trailing-whitespace-fixer",
            "language": "python",
            "files": "\\.(html|erb|slim|haml|ejs|jade|js|coffee|json|rb|md|py|css|scss|less|sh|tmpl|txt|yaml|yml)$"
        }
    ],
    "git://github.com/pre-commit/mirrors-coffeelint": [
        {
            "id": "coffeelint",
            "name": "coffeelint",
            "entry": "coffeelint",
            "language": "node",
            "files": "\\.(js|coffee)$"
        }
    ],
    "git://github.com/pre-commit/mirrors-eslint": [
        {
            "id": "eslint",
            "name": "eslint",
            "entry": "eslint",
            "language": "node",
            "files": "\\.js$"
        }
    ],
    "git://github.com/pre-commit/mirrors-jshint": [
        {
            "id": "jshint",
            "name": "jshint",
            "entry": "jshint",
            "language": "node",
            "files": "\\.js$"
        }
    ],
    "git://github.com/pre-commit/mirrors-puppet-lint": [
        {
            "id": "puppet-lint",
            "name": "puppet-lint",
            "entry": "puppet-lint",
            "language": "ruby",
            "files": "\\.pp$"
        }
    ],
    "git://github.com/pre-commit/mirrors-pylint": [
        {
            "id": "pylint",
            "name": "pylint",
            "entry": "pylint",
            "language": "python",
            "files": "\\.py$"
        }
    ],
    "git://github.com/pre-commit/mirrors-ruby-lint": [
        {
            "id": "ruby-lint",
            "name": "ruby-lint",
            "entry": "ruby-lint",
            "language": "ruby",
            "files": "\\.rb$"
        }
    ],
    "git://github.com/pre-commit/mirrors-scss-lint": [
        {
            "id": "scss-lint",
            "name": "scss-lint",
            "entry": "scss-lint",
            "language": "ruby",
            "files": "\\.scss$"
        }
    ],
    "git://github.com/FalconSocial/pre-commit-python-sorter": [
        {
            "id": "python-import-sorter",
            "name": "Sort python imports",
            "description": "This hook sorts python imports.",
            "entry": "python-import-sorter",
            "language": "python",
            "files": "\\.py$"
        }
    ],
    "git://github.com/guykisel/pre-commit-robotframework-tidy": [
        {
            "id": "robotframework-tidy-wrapper",
            "name": "robotframework tidy wrapper",
            "description": "Runs Robot Framework's tidy tool.",
            "entry": "python-robotframework-tidy",
            "language": "python",
            "files": "\\.robot$"
        }
    ],
    "git://github.com/FalconSocial/pre-commit-mirrors-pep257": [
        {
            "id": "pep257",
            "name": "pep257",
            "entry": "pep257",
            "language": "python",
            "files": "\\.py$"
        }
    ],
    "git://github.com/guykisel/prospector-mirror": [
        {
            "id": "prospector",
            "name": "prospector",
            "description": "This hook runs Prospector: https://github.com/landscapeio/prospector",
            "entry": "prospector",
            "language": "system",
            "files": "\\.py$"
        }
    ],
    "git://github.com/asottile/reorder_python_imports": [
        {
            "id": "reorder-python-imports",
            "name": "Reorder python imports",
            "description": "This hook reorders imports in python files.",
            "entry": "reorder-python-imports",
            "language": "python",
            "files": "\\.py$"
        }
    ],
    "git://github.com/asottile/cheetah_lint": [
        {
            "id": "cheetah-reorder-imports",
            "name": "Reorder cheetah imports",
            "description": "This hook reorders imports in cheetah files.",
            "entry": "cheetah-reorder-imports",
            "language": "python",
            "files": "\\.tmpl$"
        },
        {
            "id": "cheetah-flake",
            "name": "Cheetah flake",
            "description": "Lint cheetah code using flake8 and some other checks.",
            "entry": "cheetah-flake",
            "language": "python",
            "files": "\\.tmpl$"
        }
    ],
    "git://github.com/hootsuite/pre-commit-php": [
        {
            "id": "php-lint-all",
            "name": "PHP Syntax Check (Comprehensive)",
            "description": "Check PHP Syntax on ALL PHP staged files with user friendly messages and colors",
            "entry": "pre_commit_hooks/php-lint.sh",
            "language": "script",
            "files": "\\.php$",
            "args": [
                "-s all"
            ]
        },
        {
            "id": "php-lint",
            "name": "PHP Syntax Check (Quick)",
            "description": "Runs php -l on all staged files. Exits when it hits the first errored file",
            "entry": "php -l",
            "language": "system",
            "files": "\\.php$"
        },
        {
            "id": "php-unit",
            "name": "PHP Unit",
            "description": "Run the full php unit test. Checks which PHPUnit executable is available first and then runs it. Preference order is vendor/bin, phpunit and phpunit.phar.",
            "entry": "pre_commit_hooks/php-unit.sh",
            "language": "script",
            "files": "\\.php$"
        },
        {
            "id": "php-cs",
            "name": "PHP Codesniffer",
            "description": "Run php codesniffer against all staged files.",
            "entry": "pre_commit_hooks/php-cs.sh",
            "language": "script",
            "files": "\\.php$"
        }
    ],
    "git://github.com/pricematch/mirrors-rubocop": [
        {
            "id": "rubocop",
            "name": "rubocop",
            "entry": "rubocop",
            "language": "ruby",
            "files": "\\.(rb|rake)$"
        }
    ],
    "git://github.com/pricematch/mirrors-closure-linter": [
        {
            "id": "closure-linter",
            "name": "closure-linter",
            "entry": "gjslint",
            "language": "python",
            "files": "\\.js$"
        },
        {
            "id": "closure-linter-fixer",
            "name": "closure-linter-fixer",
            "entry": "fixjsstyle",
            "language": "python",
            "files": "\\.js$"
        }
    ],
    "git://github.com/pricematch/pricematch-pre-commit-hooks": [
        {
            "id": "do_not_commit",
            "name": "Block if \"DO NOT COMMIT\" is found",
            "entry": "DO NOT COMMIT",
            "language": "pcre",
            "files": "^(.*)$"
        },
        {
            "id": "ruby_timezones",
            "name": "Force explicit usage of timezones",
            "entry": "(Date.today|Time.now|DateTime.now)([ ,)]|$)",
            "language": "pcre",
            "files": "\\.(rb|rake)$"
        },
        {
            "id": "ruby",
            "name": "ruby_syntax",
            "entry": "ruby.py",
            "language": "script",
            "files": "\\.(rb|rake)$"
        }
    ],
    "git://github.com/hyperNURb/mirrors-jscs": [
        {
            "id": "jscs",
            "name": "jscs",
            "entry": "jscs",
            "language": "node",
            "files": "\\.js$"
        }
    ]
}